{"version":3,"file":"static/js/643.15a9a308.chunk.js","mappings":"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","sources":["components/DNDList.jsx","components/ImageCardConstructorFactory.jsx","constants/links.js","hooks/useFetch.js","hooks/useSendFiles.jsx","pages/startPage/index.jsx","../node_modules/@mui/icons-material/CloudUpload.js","webpack:///./src/pages/startPageStyle.css?064c"],"sourcesContent":["import React, { Component, useReducer , useState} from \"react\";\r\n\r\n\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n  return result;\r\n};\r\n\r\nconst grid = 8;\r\n\r\nconst getItemStyle = (isDragging) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: 250\r\n});\r\n\r\n\r\nexport default function DNDList({items, setItems, getListStyle, getItemStyle, content, itemClickHandler=()=>{}}) {\r\n\r\n\r\n  function onDragEnd(result) {\r\n      console.log(result)\r\n     if (!result.destination) {\r\n      return;\r\n    }\r\n    setItems(reorder(items,\r\n        result.source.index,\r\n      result.destination.index))\r\n\r\n  }\r\n\r\n  return (\r\n     <DragDropContext onDragEnd={onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <div\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n              style={getListStyle(snapshot.isDraggingOver)}\r\n            >\r\n              {items.map((item, index) => (\r\n                <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                  {(provided, snapshot) => {\r\n                      \r\n                     return <div\r\n                      onClick={(event) => itemClickHandler(item, event)}\r\n                      ref={provided.innerRef}\r\n                      {...provided.draggableProps}\r\n                      {...provided.dragHandleProps}\r\n                      style={{...getItemStyle(\r\n                        snapshot.isDragging, item\r\n                      ), ...provided.draggableProps.style}}\r\n                    >\r\n                      {content(item, index)}\r\n                    </div>\r\n\r\n                  }\r\n                  }\r\n                </Draggable>\r\n              ))}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { IconButton } from '@mui/material';\r\n\r\n\r\nfunction ZoomableImage({file, name, setZoomed}){\r\n    const [hovered, setHovered] = useState(false)\r\n\r\n    function handleClick(event){\r\n        event.stopPropagation()\r\n        setZoomed(file)\r\n    }\r\n    return <img src={file} alt={name} className='zoomableImageContent' onClick={handleClick}/> \r\n}\r\n\r\nconst getItemStyle = (isDragging, item) => ({\r\n    border: '1px solid lightgray',\r\n    borderRadius: '1.5rem',\r\n    background: 'white',\r\n    padding : 3,\r\n    margin : 2,\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    opacity : item.visible ? 1 : 0.5, \r\n    userSelect: \"none\",\r\n    background: !isDragging ? \"white\" : \"lightgrey\",\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n    display: \"flex\",\r\n    flexDirection: 'column',\r\n    width: '100%',\r\n    background: isDraggingOver ? \"rgba(0,255,255,0.1)\" : \"transparent\",\r\n});\r\n\r\n\r\nconst ImageCardConstructorFactory = ({setZoomed, updateFiles, canRemove=false}) => \r\n                                ({file, progress, loaded, preview, id, visible}, index) => {\r\n                                    return <React.Fragment>\r\n                                        <div style={{marginRight: 'auto'}}>{canRemove ?<Tooltip title={\"Убрать картинку\"}>\r\n                                                <IconButton onClick={() => updateFiles({type: 'remove', id})}>\r\n                                                    <CloseIcon/>\r\n                                                </IconButton>\r\n                                            </Tooltip> : null}\r\n                                            <Tooltip title={visible ? \"Не использовать картинку\" : \"Использовать картинку\"}>\r\n                                                <IconButton onClick={() => updateFiles({type: 'visibility', id, visible: !visible})}>\r\n                                                    {visible ? <VisibilityIcon/> : <VisibilityOffIcon />}\r\n                                                </IconButton>\r\n                                        </Tooltip>{index+1}) {file.name}</div> \r\n                                        {loaded \r\n                                            ? <ZoomableImage file={preview} name={file.name} setZoomed={setZoomed}/>\r\n                                            : `${Math.round(progress * 10000) / 100}%`\r\n                                        }\r\n                                    </React.Fragment>\r\n                                }\r\nexport default ImageCardConstructorFactory;\r\nexport {getItemStyle, getListStyle}","const hostName = window.location.hostname.toLowerCase();\r\n\r\nconst basicLink = process.env.NODE_ENV === \"development\" ? \"http://localhost:8034/\" : \"/\"\r\n\r\nconst devLinks = {\r\n    vision : basicLink + \"vision\",\r\n\r\n    file_receiver : basicLink + \"file_receiver\",\r\n    extract : basicLink + \"extract\"\r\n}\r\n\r\n\r\n\r\n\r\nconst links = process.env.NODE_ENV === \"development\" ? devLinks : devLinks;\r\n\r\nexport default links","import axios from \"axios\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\n\r\n\r\nconst defaultProps = {\r\n    method : 'get',\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      //\"Cache-Control\": \"no-cache\"\r\n    },\r\n    cors: false,\r\n}\r\n\r\nexport default function useFetch(initialProps={}){\r\n    const [err, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [response, setResponse] = useState(null)\r\n    const [props, setProps] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const doRequest = async () => {\r\n\r\n            const finalProps = {\r\n                    ...defaultProps,\r\n                    ...initialProps,\r\n                    ...props\r\n                }\r\n            // console.log('axios',  finalProps)\r\n            const resp = await axios(finalProps)\r\n            setResponse(resp)\r\n        }\r\n\r\n        if(isLoading)\r\n        {\r\n            (async () => {\r\n                try{\r\n                    await doRequest()\r\n                }catch(err){\r\n                    console.error(err)\r\n                    setError(err)\r\n                }\r\n        setIsLoading(false)\r\n            })()\r\n        }\r\n    }, [isLoading, props])\r\n\r\n\r\n    const doFetch = useCallback((props={}) => {\r\n        setIsLoading(true)\r\n        setResponse(null)\r\n        setError(null)\r\n        setProps(props)\r\n    }, [setIsLoading, setResponse, setError])\r\n\r\n    return {doFetch, error : err, isLoading, response}\r\n  \r\n}","import links from 'constants/links'\r\nimport { useCallback, useEffect, useState } from 'react'\r\nimport useFetch from './useFetch'\r\n\r\nimport use$ui from 'store/ui'\r\n\r\nexport default function useSendFiles({linkName='file_receiver'}){\r\n    const [,{raiseAlert}] = use$ui();\r\n    const [success, setSuccess] = useState(null)\r\n    \r\n    const {doFetch: _send, error, isLoading, response} = useFetch({\r\n        method: 'post',\r\n        headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n        },\r\n        url : links[linkName]\r\n    })\r\n\r\n    useEffect(() => {\r\n        if((!!error || !!response) && !isLoading){\r\n            setSuccess(!error)\r\n            if(!!error)\r\n                raiseAlert({text : 'При передаче данных на обработку возникли проблемы', type: 'error'})\r\n            else\r\n                raiseAlert({text : 'Данные переданы на обработку', type: 'info', duration: -1})\r\n        }\r\n\r\n    }, [error, isLoading, response])\r\n\r\n\r\n    const send = useCallback(function send(files){\r\n        const formData = new FormData();\r\n        files.forEach(({file, visible}, index) => {\r\n            if(visible)\r\n                formData.append(`page-${index}`, file)\r\n        })\r\n        _send({data: formData})\r\n    }, [])\r\n\r\n\r\n    return {send, success, response}\r\n}","import React, {useCallback, useEffect, useReducer, useState} from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\r\nimport CheckBoxIcon from '@mui/icons-material/CheckBox';\r\n\r\nimport Dialog from '@mui/material/Dialog';\r\n\r\nimport Fab from '@mui/material/Fab';\r\n\r\n\r\nimport {useDropzone} from 'react-dropzone';\r\nimport DNDList from 'components/DNDList';\r\n\r\nimport use$ui from 'store/ui';\r\nimport use$data from 'store/data';\r\n\r\nimport '../startPageStyle.css'\r\n\r\nimport ImageCardConstructorFactory, {getItemStyle, getListStyle} from 'components/ImageCardConstructorFactory'\r\nimport useSendFiles from 'hooks/useSendFiles';\r\n\r\n\r\nfunction prevent(event){\r\n    event.stopPropagation()\r\n}\r\n\r\n\r\nexport default function StartPage(){\r\n    const [,{raiseAlert, openTab}] = use$ui()\r\n    const [{files}, {updateFiles}] = use$data()\r\n    const [zoomed, setZoomed] = useState(null)\r\n\r\n   \r\n\r\n\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        updateFiles({type: 'add', files : acceptedFiles, updateFiles, raiseAlert})\r\n    }, [])\r\n\r\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n\r\n        return <div width=\"100vw\" height=\"100vh\" className='pageRoot' {...getRootProps()}>\r\n                <Fab \r\n                    onClick={(event) => {\r\n                        prevent(event);\r\n                        openTab(\"processPage\")\r\n                    }}\r\n                    disabled={!files && files.length == 0} \r\n                    variant=\"extended\" \r\n                    className='fab-next'\r\n                    >\r\n                    <CheckBoxIcon/>\r\n                    Выполнить анализ\r\n                </Fab>\r\n            <Dialog\r\n                open={!!zoomed}\r\n                onClose={(event) => {event.stopPropagation(); setZoomed(null)}}\r\n                \r\n            >\r\n                <img src={zoomed} onClick={prevent}/>\r\n            </Dialog>\r\n            <input type=\"file\" name=\"files\" multiple {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                    <div className='dropzone-drop_here'>\r\n                        <CloudUploadIcon />\r\n                        Бросте файлы здесь\r\n                    </div> :\r\n                    <div className='dropzone-calm_root'>\r\n                        <div className='dropzone-header'>\r\n                            <CloudUploadIcon />\r\n                            Перенесите файлы или кликните сюда\r\n                        </div>\r\n                        <div \r\n                            onClick={prevent}\r\n                            className='dropzone-content-container'>\r\n                            <DNDList \r\n                                items={files} \r\n                                setItems={(items) => updateFiles({type: 'set', files : items})}\r\n                                getListStyle={getListStyle}\r\n                                getItemStyle={getItemStyle}\r\n                                content={ImageCardConstructorFactory({setZoomed, updateFiles, canRemove : true})}\r\n                                /> \r\n                        </div>\r\n                        \r\n                    </div>\r\n                }\r\n                \r\n        </div>\r\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["DNDList","items","setItems","getListStyle","getItemStyle","content","itemClickHandler","onDragEnd","result","console","log","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","provided","snapshot","droppableProps","ref","innerRef","style","isDraggingOver","map","item","draggableId","id","onClick","event","draggableProps","dragHandleProps","isDragging","placeholder","ZoomableImage","file","name","setZoomed","useState","src","alt","className","stopPropagation","border","borderRadius","background","padding","margin","overflow","display","alignItems","opacity","visible","userSelect","flexDirection","width","updateFiles","canRemove","progress","loaded","preview","marginRight","title","type","Math","round","window","location","hostname","toLowerCase","links","vision","basicLink","file_receiver","extract","defaultProps","method","headers","cors","useFetch","initialProps","err","setError","isLoading","setIsLoading","response","setResponse","props","setProps","useEffect","doRequest","finalProps","axios","resp","error","doFetch","useCallback","useSendFiles","linkName","use$ui","raiseAlert","success","setSuccess","url","_send","text","duration","send","files","formData","FormData","forEach","append","data","prevent","StartPage","openTab","use$data","zoomed","onDrop","acceptedFiles","useDropzone","getRootProps","getInputProps","isDragActive","height","disabled","length","variant","open","onClose","multiple","ImageCardConstructorFactory","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}